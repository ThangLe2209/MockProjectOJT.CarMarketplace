name: CI/CD Pipeline

on:
  push:
    branches: [ deployment ]  # Only trigger on deployment branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: 'AuthenticationApi'
            path: 'CarMarketplace.AuthenticationApiSolution'
            dockerfile: 'CarMarketplace.AuthenticationApiSolution/Dockerfile'
            image: 'authenticationapi'
          - name: 'CarListingApi'
            path: 'CarMarketplace.CarListingApiSolution'
            dockerfile: 'CarMarketplace.CarListingApiSolution/Dockerfile'
            image: 'carlistingapi'
          - name: 'OrderApi'
            path: 'CarMarketplace.OrderApiSolution'
            dockerfile: 'CarMarketplace.OrderApiSolution/Dockerfile'
            image: 'orderapi'
          - name: 'ApiGateway'
            path: 'ApiGateway'
            dockerfile: 'ApiGateway/Dockerfile'
            image: 'apigateway'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore dependencies
        run: dotnet restore ${{ matrix.path }}
      
      - name: Build
        run: dotnet build ${{ matrix.path }} --no-restore --configuration Release
      
      - name: Publish locally
        run: dotnet publish ${{ matrix.path }} -c Release --no-build

  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: carmarketplace-client
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [build-and-test, build-frontend]
    strategy:
      matrix:
        include:
          - name: 'AuthenticationApi'
            path: 'CarMarketplace.AuthenticationApiSolution'
            dockerfile: 'CarMarketplace.AuthenticationApiSolution/Dockerfile'
            image: 'authenticationapi'
          - name: 'CarListingApi'
            path: 'CarMarketplace.CarListingApiSolution'
            dockerfile: 'CarMarketplace.CarListingApiSolution/Dockerfile'
            image: 'carlistingapi'
          - name: 'OrderApi'
            path: 'CarMarketplace.OrderApiSolution'
            dockerfile: 'CarMarketplace.OrderApiSolution/Dockerfile'
            image: 'orderapi'
          - name: 'ApiGateway'
            path: 'ApiGateway'
            dockerfile: 'ApiGateway/Dockerfile'
            image: 'apigateway'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Publish ${{ matrix.name }}
        run: dotnet publish ${{ matrix.path }} -c Release -o ${{ matrix.path }}/bin/Release/net8.0/publish/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.image }}:latest

  docker-build-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    defaults:
      run:
        working-directory: carmarketplace-client
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./carmarketplace-client
          file: ./carmarketplace-client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clientfe:latest
